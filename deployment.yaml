# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     app: pokeapi
#   name: pokeapi
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: pokeapi
#   template:
#     metadata:
#       labels:
#         app: pokeapi
#     spec:
#       containers:
#       - image: sahat850/pokeapi:latest
#         name: pokeapi
#         ports:
#         - containerPort: 8080
#         resources:
#           limits:
#             cpu: "250m"
#             memory: "250Mi"
#           requests:
#             cpu: "100m"
#             memory: "128Mi"
#       restartPolicy: Always

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   labels:
#     app: pokeapi
#   name: pokeapi
# spec:
#   ports:
#   - name: "pokeapi"
#     port: 80
#     targetPort: 8080
#   selector:
#     app: pokeapi
#   type: LoadBalancer

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     app: pokeapi
#   name: pokeapi
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: pokeapi
#   template:
#     metadata:
#       labels:
#         app: pokeapi
#     spec:
#       containers:
#       - image: sahat850/pokeapi:latest
#         name: pokeapi
#         ports:
#         - containerPort: 8080
#         resources:
#           limits:
#             cpu: "250m"
#             memory: "250Mi"
#           requests:
#             cpu: "100m"
#             memory: "128Mi"
#       restartPolicy: Always

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   labels:
#     app: pokeapi
#   name: pokeapi
# spec:
#   ports:
#   - name: "pokeapi"
#     port: 80
#     targetPort: 8080
#   selector:
#     app: pokeapi
#   type: LoadBalancer

# ---

# apiVersion: v1
# kind: Secret
# metadata:
#   name: my-tls-secret-2
# type: kubernetes.io/tls
# data:
#   tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUUrRENDQStDZ0F3SUJBZ0lTQklUcU9aa3p6cXJDc0FYdUZyVUROdXc4TUEwR0NTcUdTSWIzRFFFQkN3VUEKTURJeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rc3dDUVlEVlFRRApFd0pTTXpBZUZ3MHlOREF5TWpNd01UQTFNekphRncweU5EQTFNak13TVRBMU16RmFNQmt4RnpBVkJnTlZCQU1NCkRpb3VibVYwYVdSdUxtMTVMbWxrTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEKeFFPb2xidjkrNi9Xb09PazFHUVk5ZU1HZUxlUjdBaTVJVlIrcVVPU2tSU1VZUk56N2k2S3VnWnpGU3k0S3ZNbQpZTVBXbGFEeTlNbnhtUkdrUGhTblN3RytQM3FNUU1UbStkR0t3Vi9KazBZSE5yenF3VDhkVFBkUzREOWNoUUpQCnJ4SXZySDJ4UjNOeS93em0rcWtRb2d0ZkI2WU05bXc0eHdjRFMyaHNSK1FMTjZ6eHAxeWdCUCtmTlE5NTAvUngKQk5pc1oyRUUvYU55WUE0eFBGUEdDWGpEZU8xMWlHV3RDWFh4Nm5BZVpjWlplMU84cHpPU2xob3U4aEJEWU5ITgpQODZrUEVMMmtCekpXaVpFaXhCM0ZvenJqMXFVUXZFS2lvMXJHVi9iaDNTTTU5TGEvWExGZ0tlekVrbkxDZUF1CnBSWjd6QytGdXA4SzZmN29BeHJjcndJREFRQUJvNElDSHpDQ0Foc3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEcKQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZApEZ1FXQkJTbFVWK2JZYlh5RkFDeEo5enpTZnl3NnNoTitUQWZCZ05WSFNNRUdEQVdnQlFVTHJNWHQxaFd5NjVRCkNVRG1INitkaXhUQ3hqQlZCZ2dyQmdFRkJRY0JBUVJKTUVjd0lRWUlLd1lCQlFVSE1BR0dGV2gwZEhBNkx5OXkKTXk1dkxteGxibU55TG05eVp6QWlCZ2dyQmdFRkJRY3dBb1lXYUhSMGNEb3ZMM0l6TG1rdWJHVnVZM0l1YjNKbgpMekFuQmdOVkhSRUVJREFlZ2c0cUxtNWxkR2xrYmk1dGVTNXBaSUlNYm1WMGFXUnVMbTE1TG1sa01CTUdBMVVkCklBUU1NQW93Q0FZR1o0RU1BUUlCTUlJQkJRWUtLd1lCQkFIV2VRSUVBZ1NCOWdTQjh3RHhBSFlBN3MzUVpOWGIKR3M3RlhMZWR0TTBUb2pLSFJueTg3TjdEVVVoWlJuRWZ0WnNBQUFHTjA3WHlQUUFBQkFNQVJ6QkZBaUExZFprSApzZzIvQzFBY3FTK1ZlVmNwSmtWNlRzQTJsNzJ6dDlUN2RnZWtDd0loQU9MOFJkbFdmeVJGSjFldW4yQUp1a21iCmxpMHhMTUVXbk9KME8zSTVzM0oyQUhjQVNMRGphOXFtUnpRUDVXb0MrcDB3Nnh4U0FjdFczU3lCMmJ1L3F6blkKaEhNQUFBR04wN1h6M1FBQUJBTUFTREJHQWlFQWhuWllyVUIxaEkzYkN4ZSs5ZWt6YVFRbGhCRCtENW1XZFpPNgo0NTNTM0VZQ0lRQ21obERYd29tcDFLNHVBcW1LcGVSZk5wdE9kcjVMbW9BUm5kQ3dCcm9GK0RBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFUWHY5V3RVSk84WmVsSDkxeHRNS0NXS202cmxybnNLeEZBUHNTQ3NxMUlFNnArdysKaktzUWNCdUEwNXFSeUNVSVZSZndydmNIcUZVNTc0RGZpeHFndWxTUU1Zb3R4a0FPMDFQT28wY0ZzQ1p5czYwVwpLblhnWnFZTktDNEsxT0VjWUZjRkNnanVFSmNoWDQ2NUVqWDkrWVNyWG9GNHRZWEtpeTRjU3FjUVMzc3FpbnBXCjJqUXpWNy9UOEE2aGN2T3FwT2NTdEE4cmkzK3BnTGg4ZHJxQWkzWG1Sc0wvZnpVNTRUaGhocS9GSmRzcTJGTFQKRnZiSE1mT0I3NTJYV3k0bGRjRDI3c3FINS9EOWdNUGVMNFJIVTBGWVFrRjNIRGpOdFkxZld6ckVWZjY4MnVTdwpDRVNWRVZyc3Q4WDRiL0hYcGEwekk1VDZrTDJqcWdrcGVQZURKQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
#   tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeFFPb2xidjkrNi9Xb09PazFHUVk5ZU1HZUxlUjdBaTVJVlIrcVVPU2tSU1VZUk56CjdpNkt1Z1p6RlN5NEt2TW1ZTVBXbGFEeTlNbnhtUkdrUGhTblN3RytQM3FNUU1UbStkR0t3Vi9KazBZSE5yenEKd1Q4ZFRQZFM0RDljaFFKUHJ4SXZySDJ4UjNOeS93em0rcWtRb2d0ZkI2WU05bXc0eHdjRFMyaHNSK1FMTjZ6eApwMXlnQlArZk5ROTUwL1J4Qk5pc1oyRUUvYU55WUE0eFBGUEdDWGpEZU8xMWlHV3RDWFh4Nm5BZVpjWlplMU84CnB6T1NsaG91OGhCRFlOSE5QODZrUEVMMmtCekpXaVpFaXhCM0ZvenJqMXFVUXZFS2lvMXJHVi9iaDNTTTU5TGEKL1hMRmdLZXpFa25MQ2VBdXBSWjd6QytGdXA4SzZmN29BeHJjcndJREFRQUJBb0lCQVFEQVZXNERuOSs0RWxYSwpBL01xbGYzNExvWm0yMjlOcXNaeFQzZkg3dnZyUHRnTVhWMVVMWU9wVUJxUmxYTEdHMUpnTFZBVUMyaWtxWEYvCktjWGFCWGU4dGhyeEJjWmVoTnVwRDNRU2pGelJ0Zy9jMUZtcUJ0K24vOXVjcUw2OTZ4KzNubDJFVzhEeUxEY2IKMzVDdkxOWGNISlhOZGNJNTREVWR1Qzd6TXlKaW12d0RHUkFXayt5Sm1KMzh2eGFSOUhVckdsd1VRaThBWTljdwpiNFpZNUlIaGlaVUZrc1B3czVLa1B2WXdUQVNYUjBpTzRKQkJHRlZpbmVwdHlYMlFEdmRIc0d2NWVHMm1RWW50CmpCdzJ0OGZ6Sk9SOWlvRGFCZVpFc1dUNFROYlEydFRuTFdnRUY4QTR2cEZLZDN0WFNzR0RJNUhqSVIyUzBoV0cKVDc4VjVTVUJBb0dCQU9NZGU0NkJnKy9Fa2FyTU5QS2R2QVhRV3QwZ0JhSkJLQldMVzNKaEYvY1YvTXhMQk9YeApnYnBKTTN6K3VodGRZWmZpOVRKa3VMbWZmQnp1Ti9sNGlFTzVoc2RhcGRaR3FDRFdVcitDMEV2a3o5SnVZL2Q2CjRRTTQwb2oxc1p5bk5LdmhDR216ejZ2aktwYjJPTDRzbmdCK0JmdkxhdlNPN2haQ3NvdjR5R2toQW9HQkFONFMKSTFxcXAraWxzRVBlZEQ0eFc5ZGlkYTZ5dFovMkNsNTJWbjlnL2ZRMzlLNVlET3NQWk44RWY1NDdqUlZnbVA5SgpMQXc2eTQwQi8vUHBLalIwV0V2bENCRjNWc1dMT1RjRzhuTkZlRVdHM2F0NEFLZHNOd1ArNy85UFNYdE4yRjRkCkU1YXZjaU8yWFlZWE1xOSsrdzBEd01wKzE5M0ZWekxBVjAwbUszdlBBb0dBUmRYekFFYmpBdjgycTRaUFlhc08KL2RxcmxnTWF1R0hBcVo5SVowdGp5eDUvdFhINzk1ampneHl2TUdoRFlkYTlBNjlPSmtqQ1pKR2Q0R2QvM3I0cAphR25MLzlEbjNaT3NieXg0RlZ0c0lXb2lYVnFFY3J6ZUk5ZDlKWkFuSlR4ay9kVWNlU1JKWDFsaTV6aWZDaHMrCkduaWw3bDhHYkZ6bTZRRnBWWkVTVHdFQ2dZRUF6M2hLcDI1QXFNNERPNlVkSE8yb1REV2tsSzVKbVVTWXMyQUQKdDhXNS9PdzZJSmdLbWFFc01GOVhpMUUvb2ZVNWUyZTFTMGV5Mis0K1huWThBLzJlY0dsdGZFUHVRV2lzNzRnQwpBMGVuOGV6cU5FUk0rQjNWMkZuWmhzRmdlVjVsQXFoUG9Md1ErdVJwdzlqd2RaMUFsd3dtbGdpalRJSU4wVkI1ClA0NmxtV2tDZ1lBRVFrc0tDbHIrS0ZIVnMzN0QwRit3azNYRnM1ZUhsdFNEbGgyaWVrNDBIOGdhalhVS3hKM2gKZEthLzFRbTRvaWdjeWRLa1VOU290eFdjM1NPSnZKQjlrTGRzd3FSWG5CMXZQMFFMMTNTNisvbnlYbFhGeUxrZQpJcUdNQUZmL1N5OGhyYjhudGx6Q1orTUNEbjU2TmZtR2RQNkZWeFZ0Yk9CcWY4L2E0OXZqMWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

# ---

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: pokeapi-ingress
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
#     nginx.ingress.kubernetes.io/ssl-redirect: "true"
# spec:
#   tls:
#   - hosts:
#     - netidn.my.id  # Your domain name
#     secretName: my-tls-secret-2  # Your secret name
#   rules:
#   - host: netidn.my.id
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: pokeapi
#             port:
#               number: 80

####################WORK###################
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     app: pokeapi
#   name: pokeapi
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: pokeapi
#   template:
#     metadata:
#       labels:
#         app: pokeapi
#     spec:
#       containers:
#       - image: sahat850/pokeapi:latest
#         name: pokeapi
#         ports:
#         - containerPort: 8080
#         resources:
#           limits:
#             cpu: "250m"
#             memory: "250Mi"
#           requests:
#             cpu: "100m"
#             memory: "128Mi"
#       - name: zabbix-agent
#         image: zabbix/zabbix-agent:latest
#         ports:
#         - containerPort: 10051
#         env:
#           - name: ZBX_HOSTNAME
#             value: "pokeapi"  # Set ZBX_HOSTNAME directly to the desired hostname
#           - name: ZBX_SERVER_HOST
#             value: "34.70.47.142"  # Ganti dengan alamat IP server Zabbix
#       restartPolicy: Always

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   labels:
#     app: pokeapi
#   name: pokeapi
# spec:
#   ports:
#   - name: "http"
#     port: 80
#     targetPort: 8080
#   selector:
#     app: pokeapi
#   type: LoadBalancer


# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     app: pokeapi
#   name: pokeapi
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: pokeapi
#   template:
#     metadata:
#       labels:
#         app: pokeapi
#     spec:
#       containers:
#       - image: sahat850/pokeapi:latest
#         name: pokeapi
#         ports:
#         - containerPort: 8080
#         resources:
#           limits:
#             cpu: "250m"
#             memory: "250Mi"
#           requests:
#             cpu: "100m"
#             memory: "128Mi"
#         env:
#         - name: NEW_RELIC_CONFIG_FILE
#           value: "/app/newrelic.ini"  # Sesuaikan dengan lokasi konfigurasi New Relic Anda
#       - name: zabbix-agent
#         image: zabbix/zabbix-agent:latest
#         ports:
#         - containerPort: 10051
#         env:
#           - name: ZBX_HOSTNAME
#             value: "pokeapi"
#           - name: ZBX_SERVER_HOST
#             value: "34.70.47.142"
#       - name: zabbix-proxy
#         image: zabbix/zabbix-proxy-sqlite3:latest  # Ganti dengan gambar Zabbix Proxy yang sesuai
#         ports:
#         - containerPort: 10051  # Sesuaikan port sesuai dengan konfigurasi Zabbix Proxy Anda
#         env:
#           - name: ZBX_SERVER_HOST
#             value: "34.70.47.142"
#           - name: ZBX_PROXYMODE
#             value: "0"  # Sesuaikan dengan mode proxy yang diinginkan (0 - Active, 1 - Passive)
#           # Tambahkan variabel lingkungan lain yang diperlukan untuk konfigurasi Zabbix Proxy
#       restartPolicy: Always

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   labels:
#     app: pokeapi
#   name: pokeapi
# spec:
#   ports:
#   - name: "http"
#     port: 80
#     targetPort: 8080
#   selector:
#     app: pokeapi
#   type: LoadBalancer

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pokeapi
  name: pokeapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pokeapi
  template:
    metadata:
      labels:
        app: pokeapi
    spec:
      containers:
      - image: sahat850/pokeapi:latest
        name: pokeapi
        ports:
          - containerPort: 8080
        volumeMounts:
          - name: newrelic-config-volume
            mountPath: /etc/newrelic
      - name: zabbix-agent
        image: zabbix/zabbix-agent:latest
        ports:
          - containerPort: 10051
        env:
          - name: ZBX_HOSTNAME
            value: "pokeapi"
          - name: ZBX_SERVER_HOST
            value: "34.70.47.142"
      - name: zabbix-proxy
        image: zabbix/zabbix-proxy-sqlite3:latest
        ports:
          - containerPort: 10051
        env:
          - name: ZBX_SERVER_HOST
            value: "34.70.47.142"
          - name: ZBX_PROXYMODE
            value: "0"
      restartPolicy: Always
      volumes:
        - name: newrelic-config-volume
          secret:
            secretName: newrelic-config

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: pokeapi
  name: pokeapi
spec:
  ports:
    - name: "http"
      port: 80
      targetPort: 8080
  selector:
    app: pokeapi
  type: LoadBalancer
